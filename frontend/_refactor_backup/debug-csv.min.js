// debug-csv.min.js
(function(){const debugInfo=document.getElementById('debug-info'),cropList=document.getElementById('crop-list');if(!debugInfo||!cropList)return;function log(m){debugInfo.innerHTML+=`<p>${m}</p>`;console.log(m)}log('Starting CSV load test...');log('D3.js version: '+(window.d3&&d3.version));const csvPath='./crops.csv'+(location.protocol==='file:'?('?v='+Date.now()):'');log('Resolved CSV path: '+csvPath);d3.csv(csvPath).then(raw=>{log('✅ CSV loaded successfully!');log('Total rows: '+raw.length);if(raw.length){log('First row structure: '+JSON.stringify(raw[0]));const data=raw.map(d=>({Crop:d.Crop,Date:new Date(d.Date),Price:+d.Price})),unique=[...new Set(data.map(d=>d.Crop))];log('Unique crops found: '+unique.length);log('Crops: '+unique.join(', '));cropList.innerHTML=unique.map(c=>{const rows=data.filter(d=>d.Crop===c),avg=(rows.reduce((s,d)=>s+d.Price,0)/rows.length).toFixed(2);return`<div class="crop-item"><strong>${c}</strong><br>Data points: ${rows.length}<br>Avg Price: ₹${avg}</div>`}).join('')}else log('❌ CSV is empty')}).catch(e=>{log('❌ CSV loading failed: '+e.message);try{log('Error details: '+JSON.stringify(e))}catch{}})})();